
1.0.1 10/06/23

-- Fixed bug on widgets ::set_width() setting incorrect dimension axis.
-- Fixed bug at frame widget actions (dragging and resizing), now it calculates from visible rect.
-- Symmetric layout processing based on scroll pixels offsets.

1.0.1 11/06/23

-- Added theme options to switch between symmetric or non-symmetric layout processing.
-- Building methods in the frame (soon maybe all widgets should have it).
-- Fixed next flag height for previous height (now it uses the highest height).
-- Added auto-scale factor and widgets resolution scaling factor-based.

1.0.2 11/06/23

-- Auto-scale step interval based.
-- Multi-cursor internal system for textbox.

1.0.3 12/06/23

-- Fixed textbox erasing event when lines are empty.

1.0.4 12/06/23

-- Fixed scrolling priority using parent checks for absolute widgets.
-- Fixed textbox not scrolling.
-- Fixed absolute widget firing other widget events (now it is clamped).

1.0.5 15/06/23

-- Added real-time textbox text changing.
-- Scroll priority between parents and children.
-- Performance fixes (reduced draw calls).

1.0.6 16/06/23

-- Fixed issue with high-frequency scrolling widgets update not stopping.
-- Fixed scrolling clamp desync when a text is updated by UI data.

-- Processing stack swap timing runtime with 14018 widgets! --
-- Resize: (telemetry size, sum) (average timing): 36, 98494    2735
-- No resize: (telemetry size, sum) (average timing): 36, 85866    2385
-- No resize <--- better

-- Fixed OpenGL allocator swapping buffer performance.
-- Fixed issue with font rendering factor & text box UI delay (textbox UI with delay to process stack reorder event).
-- Fixed layout extent checks verifying scroll widget.

1.0.7 20/06/23

-- Fixed performance using indexing rendering for simple shapes.
-- Fixed layout processing extent with next | flag interacting with scrolling widget (previous 1.0.1.5 fix made a new bug).

1.0.8 25/06/23

-- Fixed horizontal mouse pad scrolling.
-- Fixed children's frame widget resizing.
-- Fixed children frame docking left & right widget resizing.
-- Partial-fix scroll priority.
-- Reduced OpenGL overhead rendering calls.
-- Fixed scroll priority definitely.
-- Multi-cursor textbox UI-based system (select box disabled temporarily).

1.0.9 29/06/23

-- Multi-cursor selection box rendering.
-- Fixed step scale system.
-- Temp fix resizing default window scale.
-- Added system mouse feature.
-- Fixed multi-cursor rendering empty line selection box.
-- Reduced overhead service & gpu allocator getters calls.
-- Reduced overhead input calls.
-- Fixed scrolling bug on slider widget (increase/decrease actions).
-- Added tab size ui feature per widget data.
-- Added feature movement select textbox widget.
-- Fixed slider scrolling & dragging abs state.
-- Fixed rendering issue with scissors.
-- Added feature movements by nearest word from textbox.
-- Added absolute input statement feature.

1.0.10 09/07/23

-- Fixed blending state off at on render runtime call.
-- Better alloc/realloc batching performance.
-- Added modifier entry field features (breakline + modifier, addline + modifier, erasetext + modifier + select, select)
-- Fixed texture glitch behavior at end of allocator draw calls.
-- Added clipboard functions (paste, copy & cut).
-- Added erase line by modifier feature (lctrl + shift + delete/backspace).

1.0.11 02/08/23

-- Better handler performance.
-- Added descriptors object state-based for tasks handler.
-- Refactored utility part of code.
-- Fixed textbox bizzare behavior with cursors (all textbox(s) were working simultaneous).
-- Now you can select the text at end of chunk text without hovering the text rect necessary.e
-- Fixed not automatically filling and jumping at end of text when cursor is selecting.
-- Fixed select action when moving at end of a line, now no longer crashes.
-- Insane performance optmization for textbox (over 60k lines).
-- Fixed cursor not rendering when the textbox was initially created empty.
-- Buildable UI(s) data style for all widgets.
-- Reduced lines of code from popup widget and the bloat part between compoent x element (as before).
-- Removed useless bloat code from geometry and layout service (grid etc).
-- Added maximum lines limit for textbox.
-- Added maximum chars per line for textbox.

1.0.12 03/09/23

-- New open-souce license MIT for EKG distribution, please read 'vokegpu-ekg-license.txt' for more details.
-- Fixed cursor skipping the last two chars at end of line.
-- Increase speed performance of log, now it is batched.
-- Fixed cursor clicking after optimization.
-- Fixed crash when pasting a large text that is less than the textbox chars per line limit.
-- Textbox UI selecting performance insanely increased.
-- Fixed flicking rendering when deleting text at end of textbox lines.
-- Fixed UTF cursor decoding - logic of cursor selecting.
-- UTF substring performance optimized.
-- Fixed text selecting.
-- Fixed textbox rendering artefacts because of size of floating point.
-- Fixed slow scrolling from textbox.
-- Added new inputs tag: mouse-wheel-left and mouse-wheel-right, for X axis.
-- ULTRA-INSANE textbox performance increase.
-- Textbox insert line performance 1% increased.
-- Textbox selection signal of next line.
-- Removing verbose popup stuff.

1.0.14 26/09/23

-- Added item graph system.
-- Added component to item.
-- Added level setting to widgets.
-- Small rendering geometry resources buffer swap (re-allocating geometry resources) overhead fix.
-- Removed nested sets, and if-elses from cmake build.
-- Optimized geometry resources re-allocating ticks.
-- Optimized UTF-8 substring performance.
-- Split feature in text util.
-- Textbox UI is a STL vector-based.
-- Fixed `ekg::log::flush` copying string buffer and not cleaning.
-- Performance in swap frames optimized 81.87%.

1.1.0 19/01/24

-- New initialization system object-state based.
-- New interface runtime system for platform X lib and RHI (Rendering-Hardware Interface) for GPU API.
-- Internal code refactored, removed useless headers and not-profile conduct follow code.
-- Added SDL runtime interface.
-- Added OpenGL RHI (Rendering-Hardware Interface).
-- Performance boost excluding mapped scissors.
-- State-based for abstract UI elements.
-- Cross-platform API now contains a serialized event type.
-- Keybinds and special keys, little optmized.
-- Fixed slider glitch/broken.
-- Removed unused features-functions/methods.
-- CMake new features and d-vars: `EKG_FORCE_WINDOWS`, `EKG_FORCE_ANDROID` and `EKG_FORCE_LINUX`:
-- - An else-if/elif condition that first match windows, android, and linux;
-- - or forced d-var sequentially.
-- Little optmization in `ekg::utf_decode` (break-line string decode to a vector of strings).
-- Fixed small pixel-escape from rendering, any non-concave draw when reached zero was forcing generate one pixel fragment, so it was rendering a small pixel.
-- Fixed break-line decode: `ekg::utf_decode` was not emplacing back at 0 pos.
-- Added column header font size and align for listbox.
-- GLFW3 interface support.
-- New key cross-interface for IO serialized events.
-- Sampler GPU object working.
-- Each widget with layer-system, now you can insert GPU samplers to each layer of a widget. 
-- Each widget with action task when an interaction is fired.
-- Emoji(s) support on font rendering.
-- Dynamic glyph char data, now EKG can render any type of char increasing the amount of mapped UTF-32 chars code.
-- Ownership valuable memory address mapping to literal any-widget content.
-- Tiling layout DPI system.
-- Performance improved, new redraw entire GUI flag way: moved to ekg::ui::display.
-- New top-level frame feature, now you can have a top-level frame which bypass the drag action, dragging the top-level frame instead of low-level frame.
-- Fixed fill pixel imperfect sizes.
-- Removed trash layout service.
-- Fixed pixel imperfect on scrolling and on all places.
-- Moved `std::vector<t>` extends to `ekg::value_t<t>` in listbox and textbox.
-- Fixed pixel-unuscaled from font face size, now the text height is set to the specified font face size.
-- Listbox performance increase for resize & events (highlight, press, open etc).
-- Removed useless text width condition of button for set the width.
-- Listbox highlight optmized.
-- Fixed a glitch where the latest widget was not adding the extent if widget did not have flag ok --- ekg::dock::next ---.